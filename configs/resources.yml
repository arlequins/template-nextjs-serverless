Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.bucketName}
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Sid: AllowCloudFrontServicePrincipalReadOnly
          Effect: Allow
          Principal:
            Service: cloudfront.amazonaws.com
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:aws:s3:::${Bucket}/*
          Condition:
            StringEquals:
              AWS:SourceArn:
                Fn::Sub: arn:aws:cloudfront::${AWS::AccountId}:distribution/${Distribution}
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name:
          Fn::Sub: ${self:custom.bucketName}-oac
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  Distribution: ${file(configs/distribution.yml)}
  # no custom domain
  # Distribution: ${file(configs/distribution.default.yml)}
  CloudFrontFunctionRequest: ${file(configs/functions-request.${sls:stage}.yml)}
  # basic auth
  # CloudFrontFunctionRequest: ${file(configs/functions-request-basic-auth.${sls:stage}.yml)}
  CloudFrontFunctionResponse: ${file(configs/functions-response.yml)}

Outputs:
  URL:
    Value:
      Fn::Sub: https://${Distribution.DomainName}
  DistributionId:
    Value: !Ref Distribution
