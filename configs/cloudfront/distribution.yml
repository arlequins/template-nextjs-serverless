Type: AWS::CloudFront::Distribution
Properties:
  DistributionConfig:
    Enabled: true
    HttpVersion: http2and3
    # Aliases: - custom domain
    #   - ${param:DOMAIN_ALIASES}
    PriceClass: PriceClass_100
    WebACLId: ${param:AWS_CLOUDFRONT_WAF_ARN}
    Origins:
      - Id: S3Origin
        DomainName:
          Fn::Join:
            - "."
            - - Ref: Bucket
              - s3
              - Ref: AWS::Region
              - Ref: AWS::URLSuffix
        OriginAccessControlId:
          Ref: OriginAccessControl
        S3OriginConfig:
          OriginAccessIdentity: ""

    DefaultCacheBehavior:
      TargetOriginId: S3Origin
      ViewerProtocolPolicy: redirect-to-https
      AllowedMethods: ['GET', 'HEAD']
      CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
      ForwardedValues:
        QueryString: false
      Compress: true
      FunctionAssociations:
        - EventType: viewer-request
          FunctionARN: !GetAtt CloudFrontFunctionRequest.FunctionARN
      #   - EventType: viewer-response
      #     FunctionARN: !GetAtt CloudFrontFunctionResponse.FunctionARN

    CustomErrorResponses:
      - ErrorCode: 400
        ResponsePagePath: /400/index.html
        ResponseCode: 400
        ErrorCachingMinTTL: 300
      - ErrorCode: 403
        ResponsePagePath: /403/index.html
        ResponseCode: 403
        ErrorCachingMinTTL: 300
      - ErrorCode: 404
        ResponsePagePath: /404/index.html
        ResponseCode: 404
        ErrorCachingMinTTL: 300
      - ErrorCode: 500
        ResponsePagePath: /500/index.html
        ResponseCode: 500
        ErrorCachingMinTTL: 300
    # ViewerCertificate: - custom domain
    #   AcmCertificateArn: ${param:AWS_ACM_CERTIFICATION_ARN}
    #   SslSupportMethod: sni-only
    #   MinimumProtocolVersion: TLSv1.2_2021
